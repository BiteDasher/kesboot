#!/bin/bash
case "$1" in
	h|-h|--help|help)
		cat <<EOF
usage: kesboot [options]

  Options:
    -r --remove <var>   Deletes the specified EFI variable
    -u --update         Updates all variables according to the configuration file (/etc/kesboot.conf)
    -f --force          Recreates all variables according to the configuration file (/etc/kesboot.conf)
    -l --list           Output of all EFI variables created via kesboot

kesboot allows you to manage the boot of the kernel using the EFI Kernel Stub

EOF
	exit 0
	;;
esac
if [ "$(id -u)" -ne 0 ]; then
	echo "The script must be run with superuser rights" >&2
	exit 1
fi
source /usr/share/kesboot/main.sh
source /usr/share/kesboot/default
_lint_config || exit 1
source /etc/kesboot.conf
_check_binaries || exit $?
_action_file
BOOT_DIR="${BOOT_DIR%/}"
if [ -z "$1" ]; then
	echo "The first argument is missing" >&2
	exit 1
fi
if [ -n "$PRE_SCRIPT" ]; then
	$PRE_SCRIPT || exit $?
fi
case "$1" in
	r|-r|--remove|remove)
		if [ -z "$2" ]; then
			echo "The second argument is missing" >&2
			exit 1
		fi
		_remove_efi "$2"
	;;
	u|-u|--update|update)
		FORCE_UPDATE=0
		_check_array || exit $?
		_get_efi_prefix
		_found_root || exit $?
		_found_boot || exit $?
		_update_kernels
		_action_save
	;;
	l|-l|--list|list)
		_get_efi_prefix
		_list_efi_front
	;;
	f|-f|--force|force)
		FORCE_UPDATE=1
		_check_array || exit $?
		_get_efi_prefix
		_found_root || exit $?
		_found_boot || exit $?
		_update_kernels
		_action_save
esac
if [ -n "$POST_SCRIPT" ]; then
	$POST_SCRIPT || exit $?
fi
